#!/usr/bin/env python
"""Build script for compiling AnaFis with Cython"""
import os
import sys
import shutil
import subprocess

def clean_build():
    """Clean previous build artifacts"""
    dirs_to_clean = ['build', 'dist', '*.egg-info']
    for dir_pattern in dirs_to_clean:
        if '*' in dir_pattern:
            import glob
            for path in glob.glob(dir_pattern):
                if os.path.isdir(path):
                    shutil.rmtree(path)
                    print(f"Removed {path}")
        else:
            if os.path.exists(dir_pattern):
                shutil.rmtree(dir_pattern)
                print(f"Removed {dir_pattern}")
    
    # Remove .c files generated by Cython
    for root, dirs, files in os.walk('.'):
        for file in files:
            if file.endswith('.c') and not file.startswith('__'):
                os.remove(os.path.join(root, file))
                print(f"Removed {os.path.join(root, file)}")

def build_cython():
    """Build the project with Cython"""
    try:
        print("Building with Cython...")
        result = subprocess.run([
            sys.executable, 'setup.py', 'build_ext', '--inplace'
        ], check=True, capture_output=True, text=True)
        print("Build successful!")
        print(result.stdout)
        return True
    except subprocess.CalledProcessError as e:
        print(f"Build failed: {e}")
        print(f"Error output: {e.stderr}")
        return False

def main():
    """Main build function"""
    if len(sys.argv) > 1 and sys.argv[1] == 'clean':
        clean_build()
        return
    
    print("Starting Cython compilation for AnaFis...")
    
    # Check if Cython is installed
    try:
        import Cython
        try:
            print(f"Cython version: {Cython.__version__}") # type: ignore
        except AttributeError:
            print("Cython is installed")
    except ImportError:
        print("Cython not found. Installing...")
        subprocess.run([sys.executable, '-m', 'pip', 'install', 'cython'])
    
    # Clean previous builds
    clean_build()
    
    # Build with Cython
    if build_cython():
        print("\nCompilation completed successfully!")
        print("You can now run the compiled version with: python run.py")
    else:
        print("\nCompilation failed. Please check the errors above.")
        sys.exit(1)

if __name__ == "__main__":
    main()